name: Build Package Workflow

on:
  workflow_call:
    inputs:
      dryRun:
        description: 'Boolean input to determine if a new release should be published'
        required: true
        type: boolean
      environment:
        required: true
        type: string
     
concurrency:
  group: wallet-sdk-${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: ${{ github.ref != 'refs/heads/main' }}
        
jobs:
  buildSDKPackage:
    name: Build SDK Package
    runs-on: ubuntu-8-cores
    environment: ${{ inputs.environment }}
    steps:
      
      # Check out the latest version of the project 
      - name: Check out the project
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          lfs: true'
      
      #Cache Unity library
      - name: Cache Unity Library
        uses: actions/cache@v4
        with:
          path: Library
          key: Library-${{ hashFiles('Assets/**', 'Packages/**', 'ProjectSettings/**') }}
          restore-keys: |
            Library-

      #Export Unity Package
      - name: Export Unity Package
        uses: game-ci/unity-builder@v4
        id: unityBuildStep
        env:
          UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
          UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
          UNITY_SERIAL: ${{ secrets.UNITY_SERIAL }}
        with:
          targetPlatform: StandaloneLinux64
          unityVersion: "2022.3.17f1"
          buildMethod: Monaverse.Editor.MonaverseEditorTools.ExportUnityPackage
          allowDirtyBuild: true

      - name: Semantic Release
        uses: cycjimmy/semantic-release-action@v4
        id: semanticReleaseStep
        with:
          dry_run: ${{ inputs.dryRun }}
          tag_format: ${version}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      
      # Print the version
      - name: Print Version
        run: |
          echo ${{ steps.semanticReleaseStep.outputs.new_release_version }}
      
      # Create version.json
      - name: Create Version File
        run: |
          echo '{ "version": "${{ steps.semanticReleaseStep.outputs.new_release_version }}", "commit": "${{ github.sha }}" }' > version.json

      # Package Files into a Folder
      - name: Package Files
        run: |
          mkdir package
          mv version.json package/
          mv Monaverse.unitypackage package/

      #Upload Unity Package
      - name: Upload Unity Package
        uses: actions/upload-artifact@v4
        with:
          name: monaverse-sdk-package
          path: package/